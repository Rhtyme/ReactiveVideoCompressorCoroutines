apply plugin: 'com.android.application'

apply plugin: 'jacoco'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'ru.kwork.app.testing.OpenForTesting'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.rhtyme.reactivevideocompressor"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        maxProcessCount 4
        preDexLibraries false
        javaMaxHeapSize "8g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
        pickFirst 'mockito-extensions/org.mockito.plugins.MockMaker'
    }

    lintOptions {
        checkReleaseBuilds false
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    // Gradle automatically adds 'android.test.runner' as a dependency.
    useLibrary 'android.test.runner'

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

}
apply from: 'dependencies.gradle'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
        maven {
            url "https://jitpack.io"
        }

    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://github.com/leonardocardoso/mvn-repo/raw/master/maven-deploy' }
}

dependencies {
    def lifecycle_version = "2.1.0"
    def room_version = "2.2.2"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.core:core-ktx:1.1.0"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    implementation supportLibs
    implementation networkLibs
    implementation rxJavaLibs

    implementation 'com.github.bumptech.glide:glide:4.10.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'

    implementation 'com.jakewharton.timber:timber:4.7.1'

    api 'androidx.annotation:annotation:1.1.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    // For Kotlin use kapt instead of annotationProcessor

    implementation "org.jetbrains.anko:anko-commons:0.10.8"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-alpha03'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0-alpha03'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0'

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    implementation 'com.google.android.material:material:1.1.0-alpha09'

    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // Dependencies for local unit tests
    implementation "junit:junit:$junitVersion"

    implementation 'com.karumi:dexter:6.0.1'

    implementation 'com.crystal:crystalrangeseekbar:1.1.3'

    implementation 'com.arthenica:mobile-ffmpeg-full:4.3'

    implementation 'com.google.android.exoplayer:exoplayer:2.11.1'

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    testImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:rules:$androidXTestRulesVersion"
    // Once https://issuetracker.google.com/127986458 is fixed this can be testImplementation
    implementation "androidx.fragment:fragment-testing:$fragmentVersion"
    implementation "androidx.test:core:$androidXTestCoreVersion"
    implementation "androidx.fragment:fragment:$fragmentVersion"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestRulesVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    androidTestImplementation "org.robolectric:annotations:$robolectricVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // Resolve conflicts between main and test APK:
    androidTestImplementation "androidx.annotation:annotation:$androidXAnnotations"
    androidTestImplementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    androidTestImplementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    androidTestImplementation "androidx.appcompat:appcompat:$appCompatVersion"
    androidTestImplementation "com.google.android.material:material:$materialVersion"

/*
    testImplementation 'org.powermock:powermock-api-mockito:1.6.6'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.6'
*/

    testImplementation "io.kotlintest:kotlintest:2.0.7"
    testImplementation 'org.powermock:powermock-module-junit4-rule:2.0.0-beta.5'
    testImplementation 'org.powermock:powermock-core:2.0.0-beta.5'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.0-beta.5'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.0-beta.5'


    androidTestImplementation("org.koin:koin-test:$versions.koin_version") {
        exclude group: 'org.mockito'
    }
    testImplementation("org.koin:koin-test:$versions.koin_version") { exclude group: 'org.mockito' }

    testImplementation 'org.mockito:mockito-inline:3.0.0'



    //koin di

    implementation "org.koin:koin-core:$versions.koin_version"
    implementation "org.koin:koin-android:$versions.koin_version"
    // Koin AndroidX Scope features
    implementation "org.koin:koin-androidx-scope:$versions.koin_version"
    // Koin AndroidX ViewModel features
    implementation "org.koin:koin-androidx-viewmodel:$versions.koin_version"
    // Koin AndroidX Experimental features
    implementation "org.koin:koin-androidx-ext:$versions.koin_version"


}
